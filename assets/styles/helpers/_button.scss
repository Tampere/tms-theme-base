/**
 * Button class generator
 * sass-lint:disable no-important
 */

$button-colors: $colors !default;

$button-color: $primary-invert !default;
$button-color-hover: $dark-invert !default;
$button-color-active: $dark-invert !default;
$button-color-focus: $dark-invert !default;
$button-color-inverted: $primary !default;
$button-color-inverted-hover: $light-invert !default;
$button-color-inverted-active: $dark !default;
$button-color-inverted-focus: $dark !default;
$button-background-color: $primary !default;
$button-background-color-hover: $light !default;
$button-background-color-active: $dark !default;
$button-background-color-focus: $dark !default;
$button-background-color-inverted: $primary-invert !default;
$button-background-color-inverted-hover: $light !default;
$button-background-color-inverted-focus: $light !default;
$button-background-color-inverted-active: $light !default;
$button-border-color: $button-background-color !default;
$button-border-color-active: $button-background-color-active !default;
$button-border-color-focus: $black !default;
$button-border-width: .15rem;
$button-border-radius: 1.8rem;

@mixin button_colors($button-color-mixin-background, $button-color-mixin-text, $button-color-mixin-border) {
    color: $button-color-mixin-text !important;
    background-color: $button-color-mixin-background !important;
    border-color: $button-color-mixin-border !important;

    .icon {
        fill: $button-color-mixin-text !important;
    }
}

.button-state-focus {
    outline: .125rem dashed $color-black;
    outline-offset: .25rem;
}

.button-state-hover {
    filter: drop-shadow(0 .25rem .5rem rgba($black, .15));
}

.button-states {
    &:hover,
    &.is-hovered,
    &:focus,
    &.is-focused {
        @extend .button-state-hover;
    }

    &:focus,
    &.is-focused {
        @extend .button-state-focus;
    }
}

.button {
    @extend %control;
    @extend %unselectable;

    height: auto;
    background-color: $button-background-color;
    border-color: $button-border-color;
    border-width: $button-border-width;
    border-radius: $button-border-radius;
    color: $button-color;
    cursor: pointer;
    font-weight: $weight-medium;
    font-family: $family-secondary;
    font-size: .9375rem;

    justify-content: center;
    padding: .625rem 1.875rem;

    text-align: center;
    white-space: normal;
    text-decoration: none !important;

    @include from($tablet) {
        font-size: .88235rem;
        padding-right: 1.764rem;
        padding-left: 1.764rem;
    }

    .icon {
        width: 1rem;
        height: 1rem;
        margin-left: 1.75rem !important;
        margin-right: -.5rem !important;
        fill: $button-color;
    }

    &.is-outlined {
        color: $button-color-inverted;
        background-color: transparent;
        border-color: $button-border-color;

        .icon {
            fill: $button-color-inverted;
        }
    }

    &.is-borderless {
        color: $button-color;
        background-color: $button-background-color;
        border-color: transparent;

        .icon {
            fill: $button-color;
        }
    }

    &.is-inverted {
        color: $button-color-inverted;
        background-color: $button-background-color-inverted;
        border-color: $button-color-inverted;

        .icon {
            fill: $button-color-inverted;
        }
    }

    &--icon {
        .icon {
            margin-left: .75rem !important;
            margin-right: -.3rem !important;
        }
    }

    &.is-small {
        padding: .36rem 1.5rem !important;
        border-radius: 1.7rem !important;

        .icon {
            display: none;
        }
    }

    // Then the color variation generation
    @each $name, $pair in $button-colors {
        $btn-pair-primary: nth($pair, 1);
        $btn-pair-primary-invert: nth($pair, 2);

        $btn-pair-primary-text: $btn-pair-primary !default;
        $btn-pair-primary-text-invert: $btn-pair-primary-invert !default;

        @if (length($pair) > 2) {
            $btn-pair-primary-text: nth($pair, 3);
        }
        @if (length($pair) > 3) {
            $btn-pair-primary-text-invert: nth($pair, 4);
        }

        &.is-#{$name} {
            /**
             * button_colors( background, text, border color )
             */
            &,
            &:active,
            &.is-active {
                @include button_colors($btn-pair-primary, $btn-pair-primary-text-invert, $btn-pair-primary);
            }

            &:hover,
            &.is-hovered,
            &:focus,
            &.is-focused {
                @include button_colors($btn-pair-primary-invert, $btn-pair-primary-text, $btn-pair-primary);
            }

            @extend .button-states;

            &.is-outlined {
                &,
                &:active,
                &.is-active {
                    @include button_colors(transparent, $btn-pair-primary, $btn-pair-primary);
                }

                @extend .button-states;
            }

            &.is-borderless {
                &,
                &:active,
                &.is-active {
                    @include button_colors($btn-pair-primary, $btn-pair-primary-text-invert, transparent);
                    border-color: transparent !important;
                }

                @extend .button-states;
            }

            &-invert,
            &.is-inverted {
                &,
                &:active,
                &.is-active {
                    @include button_colors($btn-pair-primary-invert, $btn-pair-primary-text, $btn-pair-primary-invert);
                }

                &:hover,
                &.is-hovered,
                &:focus,
                &.is-focused {
                    @include button_colors($btn-pair-primary, $btn-pair-primary-text-invert, $btn-pair-primary-invert);
                }

                @extend .button-states;

                &.is-outlined {
                    &,
                    &:active,
                    &.is-active {
                        @include button_colors(transparent, $btn-pair-primary-text-invert, $btn-pair-primary-text-invert);
                    }

                    @extend .button-states;
                }

                &.is-borderless {
                    &,
                    &:active,
                    &.is-active {
                        @include button_colors($btn-pair-primary-invert, $btn-pair-primary-text, transparent);
                        border-color: transparent !important;
                    }

                    @extend .button-states;
                }
            }
        }
    }
}
